% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Hierarchies2Vars.R
\name{Hierarchies2Vars}
\alias{Hierarchies2Vars}
\title{Hierarchies coded as variables}
\usage{
Hierarchies2Vars(
  hierarchies,
  singleVars = FALSE,
  fromDummy = NA,
  dummyReorder = TRUE,
  ...
)
}
\arguments{
\item{hierarchies}{List of hierarchies on the same form as input to \code{\link{AutoHierarchies}}}

\item{singleVars}{When \code{TRUE}, a single variable is created for all codes except the input codes.}

\item{fromDummy}{Logical value indicating the method for handling hierarchies.
\itemize{
\item When \code{TRUE}, the algorithm uses dummy-coded hierarchies.
\item When \code{FALSE}, the algorithm works directly on hierarchies standardized by \code{AutoHierarchies}, which often results in well-structured output variables.
\item When \code{NA} (default), the algorithm first attempts the \code{FALSE} method; if this is not feasible, it falls back to the \code{TRUE} method.
}}

\item{dummyReorder}{When \code{TRUE}, the dummy-coded hierarchies are reordered, potentially improving the structure of output variables.}

\item{...}{Further parameters sent to \code{\link{AutoHierarchies}}}
}
\value{
Named list of data frames
}
\description{
The hierarchical relations are stored as minimal datasets
}
\examples{

# Examples based on those from AutoHierarchies
# You may also try converting other examples from AutoHierarchies

z <- SSBtoolsData("sprt_emp_withEU")
yearFormula <- c("y_14 = 2014", "y_15_16 = y_all - y_14", "y_all = 2014 + 2015 + 2016")
geoDimList <- FindDimLists(z[, c("geo", "eu")], total = "Europe")[[1]]
ageHier <- SSBtoolsData("sprt_emp_ageHier")

Hierarchies2Vars(list(age = ageHier, geo = geoDimList, year = yearFormula))
Hierarchies2Vars(list(age = ageHier, geo = geoDimList, year = yearFormula), singleVars = TRUE)


# NAs are included in data when necessary
# Order may affect the results. In this case, the second formula gives better results.
Hierarchies2Vars(list(f1 = c("AB = A + B", "CD = C + D", "AC = A + C", "ABCD = AB + CD"),
                      f2 = c("AB = A + B", "AC = A + C", "CD = C + D", "ABCD = AB + CD")))


}
